declare const _sfc_main: import("vue").DefineComponent<{
    data: {
        type: (StringConstructor | ArrayConstructor)[];
        default: string;
    };
    handlerNum: {
        type: NumberConstructor;
        default: number;
        validator(val: number): boolean;
    };
    typeSpeed: {
        type: NumberConstructor;
        default: number;
    };
    typeSpeedLine: {
        type: NumberConstructor;
        default: number;
    };
    cursorChar: {
        type: StringConstructor;
        default: string;
    };
    back: {
        type: BooleanConstructor;
        default: boolean;
    };
    backSpeed: {
        type: NumberConstructor;
        default: number;
    };
    scrollDom: {
        type: StringConstructor;
        default: string;
    };
}, {}, unknown, {}, {}, import("vue").ComponentOptionsMixin, import("vue").ComponentOptionsMixin, ("complete" | "lineComplete")[], "complete" | "lineComplete", import("vue").VNodeProps & import("vue").AllowedComponentProps & import("vue").ComponentCustomProps, Readonly<import("vue").ExtractPropTypes<{
    data: {
        type: (StringConstructor | ArrayConstructor)[];
        default: string;
    };
    handlerNum: {
        type: NumberConstructor;
        default: number;
        validator(val: number): boolean;
    };
    typeSpeed: {
        type: NumberConstructor;
        default: number;
    };
    typeSpeedLine: {
        type: NumberConstructor;
        default: number;
    };
    cursorChar: {
        type: StringConstructor;
        default: string;
    };
    back: {
        type: BooleanConstructor;
        default: boolean;
    };
    backSpeed: {
        type: NumberConstructor;
        default: number;
    };
    scrollDom: {
        type: StringConstructor;
        default: string;
    };
}>> & {
    onComplete?: ((...args: any[]) => any) | undefined;
    onLineComplete?: ((...args: any[]) => any) | undefined;
}, {
    data: string | unknown[];
    handlerNum: number;
    typeSpeed: number;
    typeSpeedLine: number;
    cursorChar: string;
    back: boolean;
    backSpeed: number;
    scrollDom: string;
}, {}>;
export default _sfc_main;
